# Patobulinti biudžeto programą:
# • Sukurti tėvinę klasę Irasas, kurioje būtų savybės suma , iš kurios klasės PajamuIrasas ir IslaiduIrasas paveldėtų
# visas savybes.
# • Į klasę PajamuIrasas papildomai pridėti savybes siuntejas ir papildoma_informacija, kurias vartotojas galėtų
# įrašyti.
# • Į klasę IslaiduIrasas papildomai pridėti savybes atsiskaitymo_budas ir isigyta_preke_paslauga, kurias vartotojas
# galėtų įrašyti.
# • Atitinkamai perdaryti klasės Biudzetas metodus gauti_balansa ir gauti_ataskaita kad pasiėmus įrašą iš žurnalo,
# atpažintų, ar tai yra pajamos ar išlaidos (pvz., panaudojus isinstance() metodą) ir atitinkamai atliktų veiksmus.
# • Padaryti, kad vartotojui (per konsolę) būtų leidžiama įrašyti pajamų ir išlaidų įrašus, peržiūrėti balansą ir ataskaitą

class Record:
    def __init__(self, val):
        self.val = val

    def __str__(self):
        return f"{self.val}"
class IncomeRecord(Record):
    def __init__(self, val, sender, extra_info):
        super().__init__(val)
        self.sender = sender
        self.extra_info = extra_info


class ExpensesRecord(Record):
    def __init__(self, val, payment_method, product_service):
        super().__init__(val)
        self.payment_method = payment_method
        self.product_service = product_service


class Budget:
    def __init__(self):
        self.catalog = []

    def add_income_budget(self, val, sender, extra_info):
        income_sender = IncomeRecord(val, sender, extra_info)
        self.catalog.append(income_sender)

    def add_expenses_budget(self, val, payment_method, product_service):
        expenses = ExpensesRecord(val, payment_method, product_service)
        self.catalog.append(expenses)

    def check_balance(self):
        val = 0
        for record in self.catalog:
            if isinstance(record, IncomeRecord):
                val += record.val
            if isinstance(record, ExpensesRecord):
                val -= record.val
        print(val)

    def show_all_catalog(self):
        for record in self.catalog:
            if isinstance(record, IncomeRecord):
                print(f"Income:{record.val}, {record.sender}, {record.extra_info}")
            if isinstance(record, ExpensesRecord):
                print(f"Expenses:{record.val}, {record.payment_method}, {record.product_service} ")


budget = Budget()

while True:
    choise = int(input(
        "Choose what you want to do with program:\n1. Check balance.\n2. Add income to balance\n3. Expenses "
        " balance\n4. Check all transactions\n5. End program\n "))
    if choise == 1:
        budget.check_balance()
        choise = input("Enter any key to leave balance\n")
    elif choise == 2:
        income_input = float(input("Write value that you wanna add to budget:"))
        sender_input = str(input("Write sender name:"))
        extra_info_input = str(input("Write any extra info you want:"))
        budget.add_income_budget(income_input, sender_input, extra_info_input)
    elif choise == 3:
        expenses_input = float(input("Write value that you wanna add to expenses:"))
        payment_method_input = str(input("Write how you wanna pay cash/card:"))
        product_service_input = str(input("Write for what you wanna pay:"))
        budget.add_expenses_budget(expenses_input, payment_method_input, product_service_input)
    elif choise == 4:
        budget.show_all_catalog()
    elif choise == 5:
        print("Program ended job.")
        break
    else:
        print(f"You can only choose from 1 - 6")
        pass
        
      #output
      Choose what you want to do with program:
1. Check balance.
2. Add income to balance
3. Expenses  balance
4. Check all transactions
5. End program
 2
Write value that you wanna add to budget:630
Write sender name:Audrius
Write any extra info you want:Nothing
Choose what you want to do with program:
1. Check balance.
2. Add income to balance
3. Expenses  balance
4. Check all transactions
5. End program
 3
Write value that you wanna add to expenses:255
Write how you wanna pay cash/card:cash
Write for what you wanna pay:Someone
Choose what you want to do with program:
1. Check balance.
2. Add income to balance
3. Expenses  balance
4. Check all transactions
5. End program
 4
Income:630.0, Audrius, Nothing
Expenses:255.0, cash, Someone 
Choose what you want to do with program:
1. Check balance.
2. Add income to balance
3. Expenses  balance
4. Check all transactions
5. End program
 5
Program ended job.

Process finished with exit code 0
